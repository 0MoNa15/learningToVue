{"remainingRequest":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zorayda/Downloads/learningToVue/platzi-exchange/src/views/CoinDetail.vue?vue&type=template&id=613d02fc&","dependencies":[{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/src/views/CoinDetail.vue","mtime":1588563138836},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAiZmxleC1jb2wiIH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJmbGV4IGp1c3RpZnktY2VudGVyIiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJib3VuY2UtbG9hZGVyIiwgewogICAgICAgICAgICBhdHRyczogeyBsb2FkaW5nOiBfdm0uaXNMb2FkaW5nLCBjb2xvcjogIiM2OGQzOTEiLCBzaXplOiAxMDAgfQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgIV92bS5pc0xvYWRpbmcKICAgICAgICA/IFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICJmbGV4IGZsZXgtY29sIHNtOmZsZXgtcm93IGp1c3RpZnktYXJvdW5kIGl0ZW1zLWNlbnRlciIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInctMjAgaC0yMCBtci01IiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgYWx0OiBfdm0uYXNzZXQubmFtZSwKICAgICAgICAgICAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAgICAgICAgICAgImh0dHBzOi8vc3RhdGljLmNvaW5jYXAuaW8vYXNzZXRzL2ljb25zLyIgKwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uYXNzZXQuc3ltYm9sLnRvTG93ZXJDYXNlKCkgKwogICAgICAgICAgICAgICAgICAgICAgICAiQDJ4LnBuZyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygiaDEiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC01eGwiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5hc3NldC5uYW1lKSArICIgIiksCiAgICAgICAgICAgICAgICAgICAgX2MoInNtYWxsIiwgeyBzdGF0aWNDbGFzczogInNtOm1yLTIgdGV4dC1ncmF5LTUwMCIgfSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJteS0xMCBmbGV4IGZsZXgtY29sIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJ1bCIsIFsKICAgICAgICAgICAgICAgICAgICBfYygibGkiLCB7IHN0YXRpY0NsYXNzOiAiZmxleCBqdXN0aWZ5LWJldHdlZW4iIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiYiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWdyYXktNjAwIG1yLTEwIHVwcGVyY2FzZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiUmFua2luZyIpXQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiIyIgKyBfdm0uX3MoX3ZtLmFzc2V0LnJhbmspKV0pCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoImxpIiwgeyBzdGF0aWNDbGFzczogImZsZXgganVzdGlmeS1iZXR3ZWVuIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImIiLAogICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidGV4dC1ncmF5LTYwMCBtci0xMCB1cHBlcmNhc2UiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIlByZWNpbyBhY3R1YWwiKV0KICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uX2YoImRvbGxhciIpKF92bS5hc3NldC5wcmljZVVzZCkpKQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygibGkiLCB7IHN0YXRpY0NsYXNzOiAiZmxleCBqdXN0aWZ5LWJldHdlZW4iIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiYiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWdyYXktNjAwIG1yLTEwIHVwcGVyY2FzZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiUHJlY2lvIG3DoXMgYmFqbyIpXQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdihfdm0uX3MoX3ZtLl9mKCJkb2xsYXIiKShfdm0ubWluKSkpXSkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygibGkiLCB7IHN0YXRpY0NsYXNzOiAiZmxleCBqdXN0aWZ5LWJldHdlZW4iIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiYiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWdyYXktNjAwIG1yLTEwIHVwcGVyY2FzZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiUHJlY2lvIG3DoXMgYWx0byIpXQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdihfdm0uX3MoX3ZtLl9mKCJkb2xsYXIiKShfdm0ubWF4KSkpXSkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygibGkiLCB7IHN0YXRpY0NsYXNzOiAiZmxleCBqdXN0aWZ5LWJldHdlZW4iIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiYiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWdyYXktNjAwIG1yLTEwIHVwcGVyY2FzZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiUHJlY2lvIFByb21lZGlvIildCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KF92bS5fcyhfdm0uX2YoImRvbGxhciIpKF92bS5hdmcpKSldKQogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJsaSIsIHsgc3RhdGljQ2xhc3M6ICJmbGV4IGp1c3RpZnktYmV0d2VlbiIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJiIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInRleHQtZ3JheS02MDAgbXItMTAgdXBwZXJjYXNlIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJWYXJpYWNpw7NuIDI0aHMiKV0KICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uX2YoInBlcmNlbnQiKShfdm0uYXNzZXQuY2hhbmdlUGVyY2VudDI0SHIpKQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF92bS5fbSgwKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoImxpbmUtY2hhcnQiLCB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJteS0xMCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGNvbG9yczogWyJvcmFuZ2UiXSwKICAgICAgICAgICAgICAgIG1pbjogX3ZtLm1pbiwKICAgICAgICAgICAgICAgIG1heDogX3ZtLm1heCwKICAgICAgICAgICAgICAgIGRhdGE6IF92bS5oaXN0b3J5Lm1hcChmdW5jdGlvbihoKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBbaC5kYXRlLCBwYXJzZUZsb2F0KGgucHJpY2VVc2QpLnRvRml4ZWQoMildCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF9jKCJoMyIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LXhsIG15LTEwIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJNZWpvcmVzIE9mZXJ0YXMgZGUgQ2FtYmlvIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJ0YWJsZSIsCiAgICAgICAgICAgICAgX3ZtLl9sKF92bS5tYXJrZXRzLCBmdW5jdGlvbihtKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICJ0ciIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBrZXk6IG0uZXhjaGFuZ2VJZCArICItIiArIG0ucHJpY2VVc2QsCiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJib3JkZXItYiIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJ0ZCIsIFtfYygiYiIsIFtfdm0uX3YoX3ZtLl9zKG0uZXhjaGFuZ2VJZCkpXSldKSwKICAgICAgICAgICAgICAgICAgICBfYygidGQiLCBbX3ZtLl92KF92bS5fcyhfdm0uX2YoImRvbGxhciIpKG0ucHJpY2VVc2QpKSldKSwKICAgICAgICAgICAgICAgICAgICBfYygidGQiLCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhtLmJhc2VTeW1ib2wpICsgIiAvICIgKyBfdm0uX3MobS5xdW90ZVN5bWJvbCkKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJ0ZCIsCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICFtLnVybAogICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJweC1idXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgImlzLWxvYWRpbmciOiBtLmlzTG9hZGluZyB8fCBmYWxzZSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3VzdG9tLWNsaWNrIjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZ2V0V2ViU2l0ZShtKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdCgiZGVmYXVsdCIsIFtfdm0uX3YoIk9idGVuZXIgTGluayIpXSldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJob3Zlcjp1bmRlcmxpbmUgdGV4dC1ncmVlbi02MDAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRhcmdldDogIl9ibGFuY2siIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MobS51cmwpKV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgMAogICAgICAgICAgICApCiAgICAgICAgICBdCiAgICAgICAgOiBfdm0uX2UoKQogICAgXSwKICAgIDIKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogIm15LTEwIHNtOm10LTAgZmxleCBmbGV4LWNvbCBqdXN0aWZ5LWNlbnRlciB0ZXh0LWNlbnRlciIgfSwKICAgICAgWwogICAgICAgIF9jKAogICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICJiZy1ncmVlbi01MDAgaG92ZXI6YmctZ3JlZW4tNzAwIHRleHQtd2hpdGUgZm9udC1ib2xkIHB5LTIgcHgtNCByb3VuZGVkIgogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiBDYW1iaWFyICIpXQogICAgICAgICksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmbGV4IGZsZXgtcm93IG15LTUiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAibGFiZWwiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidy1mdWxsIiwgYXR0cnM6IHsgZm9yOiAiY29udmVydFZhbHVlIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgInRleHQtY2VudGVyIGJnLXdoaXRlIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpzaGFkb3ctb3V0bGluZSBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQtbGcgcHktMiBweC00IGJsb2NrIHctZnVsbCBhcHBlYXJhbmNlLW5vbmUgbGVhZGluZy1ub3JtYWwiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJjb252ZXJ0VmFsdWUiLCB0eXBlOiAibnVtYmVyIiB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInRleHQteGwiIH0pCiAgICAgIF0KICAgICkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}