{"remainingRequest":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/babel-loader/lib/index.js!/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zorayda/Downloads/learningToVue/platzi-exchange/src/views/CoinDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/src/views/CoinDetail.vue","mtime":1588563138836},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy96b3JheWRhL0Rvd25sb2Fkcy9sZWFybmluZ1RvVnVlL3BsYXR6aS1leGNoYW5nZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL1VzZXJzL3pvcmF5ZGEvRG93bmxvYWRzL2xlYXJuaW5nVG9WdWUvcGxhdHppLWV4Y2hhbmdlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFB4QnV0dG9uIGZyb20gJ0AvY29tcG9uZW50cy9QeEJ1dHRvbic7CmltcG9ydCBhcGkgZnJvbSAnQC9hcGknOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NvaW5EZXRhaWwnLAogIGNvbXBvbmVudHM6IHsKICAgIFB4QnV0dG9uOiBQeEJ1dHRvbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFzc2V0OiB7fSwKICAgICAgaGlzdG9yeTogW10sCiAgICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICAgIG1hcmtldHM6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0Q29pbigpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0V2ViU2l0ZTogZnVuY3Rpb24gZ2V0V2ViU2l0ZShleGNoYW5nZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kc2V0KGV4Y2hhbmdlLCAnaXNMb2FkaW5nJywgdHJ1ZSk7CiAgICAgIHJldHVybiBhcGkuZ2V0RXhjaGFuZ2UoZXhjaGFuZ2UuZXhjaGFuZ2VJZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgLy9leGNoYW5nZS51cmwgPSByZXMuZXhjaGFuZ2VVcmwKICAgICAgICBfdGhpcy4kc2V0KGV4Y2hhbmdlLCAndXJsJywgcmVzLmV4Y2hhbmdlVXJsKTsKICAgICAgfSkuZmluYWxseShmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuJHNldChleGNoYW5nZSwgJ2lzTG9hZGluZycsIGZhbHNlKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0Q29pbjogZnVuY3Rpb24gZ2V0Q29pbigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIHZhciBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICAgICAgUHJvbWlzZS5hbGwoW2FwaS5nZXRBc3NldChpZCksIGFwaS5nZXRBc3NldEhpc3RvcnkoaWQpLCBhcGkuZ2V0TWFya2V0cyhpZCldKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMyksCiAgICAgICAgICAgIGFzc2V0ID0gX3JlZjJbMF0sCiAgICAgICAgICAgIGhpc3RvcnkgPSBfcmVmMlsxXSwKICAgICAgICAgICAgbWFya2V0cyA9IF9yZWYyWzJdOwoKICAgICAgICBfdGhpczIuYXNzZXQgPSBhc3NldDsKICAgICAgICBfdGhpczIuaGlzdG9yeSA9IGhpc3Rvcnk7CiAgICAgICAgX3RoaXMyLm1hcmtldHMgPSBtYXJrZXRzOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLmlzTG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBtaW46IGZ1bmN0aW9uIG1pbigpIHsKICAgICAgcmV0dXJuIE1hdGgubWluLmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmhpc3RvcnkubWFwKGZ1bmN0aW9uIChoKSB7CiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoaC5wcmljZVVzZCkudG9GaXhlZCgyKTsKICAgICAgfSkpKTsKICAgIH0sCiAgICBtYXg6IGZ1bmN0aW9uIG1heCgpIHsKICAgICAgcmV0dXJuIE1hdGgubWF4LmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmhpc3RvcnkubWFwKGZ1bmN0aW9uIChoKSB7CiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoaC5wcmljZVVzZCkudG9GaXhlZCgyKTsKICAgICAgfSkpKTsKICAgIH0sCiAgICBhdmc6IGZ1bmN0aW9uIGF2ZygpIHsKICAgICAgcmV0dXJuIE1hdGguYWJzLmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmhpc3RvcnkubWFwKGZ1bmN0aW9uIChoKSB7CiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoaC5wcmljZVVzZCkudG9GaXhlZCgyKTsKICAgICAgfSkpKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["CoinDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA,OAAA,QAAA,MAAA,uBAAA;AACA,OAAA,GAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAGA,EAAA,UAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GAHA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GAZA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,OAAA;AACA,GAhBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,QADA,EACA;AAAA;;AACA,WAAA,IAAA,CAAA,QAAA,EAAA,WAAA,EAAA,IAAA;AAEA,aAAA,GAAA,CACA,WADA,CACA,QAAA,CAAA,UADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,KAAA,EAAA,GAAA,CAAA,WAAA;AACA,OALA,EAMA,OANA,CAMA,YAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,WAAA,EAAA,KAAA;AACA,OARA,CAAA;AASA,KAbA;AAeA,IAAA,OAfA,qBAeA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;AAEA,UAAA,EAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,EAAA,CADA,EAEA,GAAA,CAAA,eAAA,CAAA,EAAA,CAFA,EAGA,GAAA,CAAA,UAAA,CAAA,EAAA,CAHA,CAAA,EAKA,IALA,CAKA,gBAAA;AAAA;AAAA,YAAA,KAAA;AAAA,YAAA,OAAA;AAAA,YAAA,OAAA;;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,OAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,OAAA;AACA,OATA,EAUA,OAVA,CAUA;AAAA,eAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AAAA,OAVA;AAWA;AA/BA,GAlBA;AAoDA,EAAA,QAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA,aAAA,IAAA,CAAA,GAAA,OAAA,IAAA,qBACA,KAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CADA,EAAA;AAGA,KALA;AAMA,IAAA,GANA,iBAMA;AACA,aAAA,IAAA,CAAA,GAAA,OAAA,IAAA,qBACA,KAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CADA,EAAA;AAGA,KAVA;AAWA,IAAA,GAXA,iBAWA;AACA,aAAA,IAAA,CAAA,GAAA,OAAA,IAAA,qBACA,KAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CADA,EAAA;AAGA;AAfA;AApDA,CAAA","sourcesContent":["<template>\n  <div class=\"flex-col\">\n    <div class=\"flex justify-center\">\n      <bounce-loader :loading=\"isLoading\" :color=\"'#68d391'\" :size=\"100\" />\n    </div>\n\n    <template v-if=\"!isLoading\">\n      <div class=\"flex flex-col sm:flex-row justify-around items-center\">\n        <div class=\"flex flex-col items-center\">\n          <img\n            class=\"w-20 h-20 mr-5\"\n            :alt=\"asset.name\"\n            :src=\"\n              `https://static.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\n            \"\n          />\n          <h1 class=\"text-5xl\">\n            {{ asset.name }}\n            <small class=\"sm:mr-2 text-gray-500\"></small>\n          </h1>\n        </div>\n\n        <div class=\"my-10 flex flex-col\">\n          <ul>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Ranking</b>\n              <span>#{{ asset.rank }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio actual</b>\n              <span>{{ asset.priceUsd | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio m치s bajo</b>\n              <span>{{ min | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio m치s alto</b>\n              <span>{{ max | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio Promedio</b>\n              <span>{{ avg | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Variaci칩n 24hs</b>\n              <span>{{ asset.changePercent24Hr | percent }}</span>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"my-10 sm:mt-0 flex flex-col justify-center text-center\">\n          <button\n            class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Cambiar\n          </button>\n\n          <div class=\"flex flex-row my-5\">\n            <label class=\"w-full\" for=\"convertValue\">\n              <input\n                id=\"convertValue\"\n                type=\"number\"\n                class=\"text-center bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none leading-normal\"\n              />\n            </label>\n          </div>\n\n          <span class=\"text-xl\"></span>\n        </div>\n      </div>\n\n      <!-- Gr치fico -->\n\n      <line-chart\n        class=\"my-10\"\n        :colors=\"['orange']\"\n        :min=\"min\"\n        :max=\"max\"\n        :data=\"history.map(h => [h.date, parseFloat(h.priceUsd).toFixed(2)])\"\n      />\n\n      <!-- Tabla -->\n      <h3 class=\"text-xl my-10\">Mejores Ofertas de Cambio</h3>\n      <table>\n        <tr\n          v-for=\"m in markets\"\n          :key=\"`${m.exchangeId}-${m.priceUsd}`\"\n          class=\"border-b\"\n        >\n          <td>\n            <b>{{ m.exchangeId }}</b>\n          </td>\n          <td>{{ m.priceUsd | dollar }}</td>\n          <td>{{ m.baseSymbol }} / {{ m.quoteSymbol }}</td>\n          <td>\n            <px-button\n              :is-loading=\"m.isLoading || false\"\n              v-if=\"!m.url\"\n              @custom-click=\"getWebSite(m)\"\n            >\n              <slot>Obtener Link</slot>\n            </px-button>\n            <a v-else class=\"hover:underline text-green-600\" target=\"_blanck\">{{\n              m.url\n            }}</a>\n          </td>\n        </tr>\n      </table>\n    </template>\n  </div>\n</template>\n\n<script>\nimport PxButton from '@/components/PxButton'\nimport api from '@/api'\nexport default {\n  name: 'CoinDetail',\n\n  components: { PxButton },\n\n  data() {\n    return {\n      asset: {},\n      history: [],\n      isLoading: false,\n      markets: []\n    }\n  },\n\n  created() {\n    this.getCoin()\n  },\n\n  methods: {\n    getWebSite(exchange) {\n      this.$set(exchange, 'isLoading', true)\n\n      return api\n        .getExchange(exchange.exchangeId)\n        .then(res => {\n          //exchange.url = res.exchangeUrl\n          this.$set(exchange, 'url', res.exchangeUrl)\n        })\n        .finally(() => {\n          this.$set(exchange, 'isLoading', false)\n        })\n    },\n\n    getCoin() {\n      this.isLoading = true\n\n      const id = this.$route.params.id\n\n      Promise.all([\n        api.getAsset(id),\n        api.getAssetHistory(id),\n        api.getMarkets(id)\n      ])\n        .then(([asset, history, markets]) => {\n          this.asset = asset\n          this.history = history\n          this.markets = markets\n        })\n        .finally(() => (this.isLoading = false))\n    }\n  },\n\n  computed: {\n    min() {\n      return Math.min(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    },\n    max() {\n      return Math.max(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    },\n    avg() {\n      return Math.abs(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    }\n  }\n}\n</script>\n\n<!--\n<template>\n  <div class=\"flex-col\">\n    <div class=\"flex justify-center\">\n      <bounce-loader :loading=\"isLoading\" :color=\"'#68d391'\" :size=\"100\" />\n    </div>\n    <template v-if=\"!isLoading\">\n      <div class=\"flex flex-col sm:flex-row justify-around items-center\">\n        <div class=\"flex flex-col items-center\">\n          <img\n            :src=\"\n              `https://static.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\n            \"\n            :alt=\"asset.name\"\n            class=\"w-20 h-20 mr-5\"\n          />\n          <h1 class=\"text-5xl\">\n            {{ asset.name }}\n            <small class=\"sm:mr-2 text-gray-500\">{{ asset.symbol }}</small>\n          </h1>\n        </div>\n\n        <div class=\"my-10 flex flex-col\">\n          <ul>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Ranking</b>\n              <span>#{{ asset.rank }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio actual</b>\n              <span>{{ asset.priceUsd | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio m치s bajo</b>\n              <span>{{ min | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio m치s alto</b>\n              <span>{{ max | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio Promedio</b>\n              <span>{{ avg | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Variaci칩n 24hs</b>\n              <span>{{ asset.changePercent24Hr | percent }}</span>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"my-10 sm:mt-0 flex flex-col justify-center text-center\">\n          <button\n            class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n          >Cambiar</button>\n\n          <div class=\"flex flex-row my-5\">\n            <label class=\"w-full\" for=\"convertValue\">\n              <input\n                id=\"convertValue\"\n                type=\"number\"\n                class=\"text-center bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none leading-normal\"\n              />\n            </label>\n          </div>\n\n          <span class=\"text-xl\"></span>\n        </div>\n      </div>\n\n      <line-chart\n        class=\"my-10\"\n        :colors=\"['orange']\"\n        :min=\"min\"\n        :max=\"max\"\n        :data=\"history.map(h => [h.date, parseFloat(h.priceUsd).toFixed(2)])\"\n      />\n\n      <h3 class=\"text-xl my-10\">Mejores Ofertas de Cambio</h3>\n      <table>\n        <tr v-for=\"m in markets\" :key=\"`${m.exchangeId}-${m.priceUsd}`\" class=\"border-b\">\n          <td>\n            <b>{{ m.exchangeId }}</b>\n          </td>\n          <td>{{ m.priceUsd | dollar }}</td>\n          <td>{{ m.baseSymbol }} / {{ m.quoteSymbol }}</td>\n          <td>\n            <px-button\n              :is-loading=\"m.isLoading || false\"\n              v-if=\"!m.url\"\n              @custom-click=\"getWebSite(m)\"\n            >\n              <slot>Obtener Link</slot>\n            </px-button>\n\n            <a v-else class=\"hover:underline text-green-600\" target=\"_blanck\">{{ m.url }}</a>\n          </td>\n        </tr>\n      </table>\n    </template>\n  </div>\n</template>\n\n<script>\nimport api from '@/api'\nimport PxButton from '@/components/PxButton'\n\nexport default {\n  name: 'CoinDetail',\n\n  components: { PxButton },\n\n  data() {\n    return {\n      isLoading: false,\n      asset: {},\n      history: [],\n      markets: []\n    }\n  },\n\n  computed: {\n    min() {\n      return Math.min(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    },\n\n    max() {\n      return Math.max(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    },\n\n    avg() {\n      return Math.abs(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    }\n  },\n\n  created() {\n    this.getCoin()\n  },\n\n  methods: {\n    getWebSite(exchange) {\n      this.$set(exchange, 'isLoading', true)\n\n      return api\n        .getExchange(exchange.exchangeId)\n        .then(res => {\n          this.$set(exchange, 'url', res.exchangeUrl)\n        })\n        .finally(() => {\n          this.$set(exchange, 'isLoading', false)\n        })\n    },\n\n    getCoin() {\n      const id = this.$route.params.id\n      this.isLoading = true\n\n      Promise.all([\n        api.getAsset(id),\n        api.getAssetHistory(id),\n        api.getMarkets(id)\n      ])\n        .then(([asset, history, markets]) => {\n          this.asset = asset\n          this.history = history\n          this.markets = markets\n        })\n        .finally(() => (this.isLoading = false))\n    }\n  }\n}\n</script>\n\n<style scoped>\ntd {\n  padding: 10px;\n  text-align: center;\n}\n</style>\n\n-->\n"],"sourceRoot":"src/views"}]}