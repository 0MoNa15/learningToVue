{"remainingRequest":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zorayda/Downloads/learningToVue/platzi-exchange/src/views/CoinDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/src/views/CoinDetail.vue","mtime":1588563138836},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zorayda/Downloads/learningToVue/platzi-exchange/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQeEJ1dHRvbiBmcm9tICdAL2NvbXBvbmVudHMvUHhCdXR0b24nCmltcG9ydCBhcGkgZnJvbSAnQC9hcGknCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29pbkRldGFpbCcsCgogIGNvbXBvbmVudHM6IHsgUHhCdXR0b24gfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFzc2V0OiB7fSwKICAgICAgaGlzdG9yeTogW10sCiAgICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICAgIG1hcmtldHM6IFtdCiAgICB9CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0Q29pbigpCiAgfSwKCiAgbWV0aG9kczogewogICAgZ2V0V2ViU2l0ZShleGNoYW5nZSkgewogICAgICB0aGlzLiRzZXQoZXhjaGFuZ2UsICdpc0xvYWRpbmcnLCB0cnVlKQoKICAgICAgcmV0dXJuIGFwaQogICAgICAgIC5nZXRFeGNoYW5nZShleGNoYW5nZS5leGNoYW5nZUlkKQogICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAvL2V4Y2hhbmdlLnVybCA9IHJlcy5leGNoYW5nZVVybAogICAgICAgICAgdGhpcy4kc2V0KGV4Y2hhbmdlLCAndXJsJywgcmVzLmV4Y2hhbmdlVXJsKQogICAgICAgIH0pCiAgICAgICAgLmZpbmFsbHkoKCkgPT4gewogICAgICAgICAgdGhpcy4kc2V0KGV4Y2hhbmdlLCAnaXNMb2FkaW5nJywgZmFsc2UpCiAgICAgICAgfSkKICAgIH0sCgogICAgZ2V0Q29pbigpIHsKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlCgogICAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZAoKICAgICAgUHJvbWlzZS5hbGwoWwogICAgICAgIGFwaS5nZXRBc3NldChpZCksCiAgICAgICAgYXBpLmdldEFzc2V0SGlzdG9yeShpZCksCiAgICAgICAgYXBpLmdldE1hcmtldHMoaWQpCiAgICAgIF0pCiAgICAgICAgLnRoZW4oKFthc3NldCwgaGlzdG9yeSwgbWFya2V0c10pID0+IHsKICAgICAgICAgIHRoaXMuYXNzZXQgPSBhc3NldAogICAgICAgICAgdGhpcy5oaXN0b3J5ID0gaGlzdG9yeQogICAgICAgICAgdGhpcy5tYXJrZXRzID0gbWFya2V0cwogICAgICAgIH0pCiAgICAgICAgLmZpbmFsbHkoKCkgPT4gKHRoaXMuaXNMb2FkaW5nID0gZmFsc2UpKQogICAgfQogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBtaW4oKSB7CiAgICAgIHJldHVybiBNYXRoLm1pbigKICAgICAgICAuLi50aGlzLmhpc3RvcnkubWFwKGggPT4gcGFyc2VGbG9hdChoLnByaWNlVXNkKS50b0ZpeGVkKDIpKQogICAgICApCiAgICB9LAogICAgbWF4KCkgewogICAgICByZXR1cm4gTWF0aC5tYXgoCiAgICAgICAgLi4udGhpcy5oaXN0b3J5Lm1hcChoID0+IHBhcnNlRmxvYXQoaC5wcmljZVVzZCkudG9GaXhlZCgyKSkKICAgICAgKQogICAgfSwKICAgIGF2ZygpIHsKICAgICAgcmV0dXJuIE1hdGguYWJzKAogICAgICAgIC4uLnRoaXMuaGlzdG9yeS5tYXAoaCA9PiBwYXJzZUZsb2F0KGgucHJpY2VVc2QpLnRvRml4ZWQoMikpCiAgICAgICkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["CoinDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CoinDetail.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"flex-col\">\n    <div class=\"flex justify-center\">\n      <bounce-loader :loading=\"isLoading\" :color=\"'#68d391'\" :size=\"100\" />\n    </div>\n\n    <template v-if=\"!isLoading\">\n      <div class=\"flex flex-col sm:flex-row justify-around items-center\">\n        <div class=\"flex flex-col items-center\">\n          <img\n            class=\"w-20 h-20 mr-5\"\n            :alt=\"asset.name\"\n            :src=\"\n              `https://static.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\n            \"\n          />\n          <h1 class=\"text-5xl\">\n            {{ asset.name }}\n            <small class=\"sm:mr-2 text-gray-500\"></small>\n          </h1>\n        </div>\n\n        <div class=\"my-10 flex flex-col\">\n          <ul>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Ranking</b>\n              <span>#{{ asset.rank }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio actual</b>\n              <span>{{ asset.priceUsd | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio m치s bajo</b>\n              <span>{{ min | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio m치s alto</b>\n              <span>{{ max | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio Promedio</b>\n              <span>{{ avg | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Variaci칩n 24hs</b>\n              <span>{{ asset.changePercent24Hr | percent }}</span>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"my-10 sm:mt-0 flex flex-col justify-center text-center\">\n          <button\n            class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Cambiar\n          </button>\n\n          <div class=\"flex flex-row my-5\">\n            <label class=\"w-full\" for=\"convertValue\">\n              <input\n                id=\"convertValue\"\n                type=\"number\"\n                class=\"text-center bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none leading-normal\"\n              />\n            </label>\n          </div>\n\n          <span class=\"text-xl\"></span>\n        </div>\n      </div>\n\n      <!-- Gr치fico -->\n\n      <line-chart\n        class=\"my-10\"\n        :colors=\"['orange']\"\n        :min=\"min\"\n        :max=\"max\"\n        :data=\"history.map(h => [h.date, parseFloat(h.priceUsd).toFixed(2)])\"\n      />\n\n      <!-- Tabla -->\n      <h3 class=\"text-xl my-10\">Mejores Ofertas de Cambio</h3>\n      <table>\n        <tr\n          v-for=\"m in markets\"\n          :key=\"`${m.exchangeId}-${m.priceUsd}`\"\n          class=\"border-b\"\n        >\n          <td>\n            <b>{{ m.exchangeId }}</b>\n          </td>\n          <td>{{ m.priceUsd | dollar }}</td>\n          <td>{{ m.baseSymbol }} / {{ m.quoteSymbol }}</td>\n          <td>\n            <px-button\n              :is-loading=\"m.isLoading || false\"\n              v-if=\"!m.url\"\n              @custom-click=\"getWebSite(m)\"\n            >\n              <slot>Obtener Link</slot>\n            </px-button>\n            <a v-else class=\"hover:underline text-green-600\" target=\"_blanck\">{{\n              m.url\n            }}</a>\n          </td>\n        </tr>\n      </table>\n    </template>\n  </div>\n</template>\n\n<script>\nimport PxButton from '@/components/PxButton'\nimport api from '@/api'\nexport default {\n  name: 'CoinDetail',\n\n  components: { PxButton },\n\n  data() {\n    return {\n      asset: {},\n      history: [],\n      isLoading: false,\n      markets: []\n    }\n  },\n\n  created() {\n    this.getCoin()\n  },\n\n  methods: {\n    getWebSite(exchange) {\n      this.$set(exchange, 'isLoading', true)\n\n      return api\n        .getExchange(exchange.exchangeId)\n        .then(res => {\n          //exchange.url = res.exchangeUrl\n          this.$set(exchange, 'url', res.exchangeUrl)\n        })\n        .finally(() => {\n          this.$set(exchange, 'isLoading', false)\n        })\n    },\n\n    getCoin() {\n      this.isLoading = true\n\n      const id = this.$route.params.id\n\n      Promise.all([\n        api.getAsset(id),\n        api.getAssetHistory(id),\n        api.getMarkets(id)\n      ])\n        .then(([asset, history, markets]) => {\n          this.asset = asset\n          this.history = history\n          this.markets = markets\n        })\n        .finally(() => (this.isLoading = false))\n    }\n  },\n\n  computed: {\n    min() {\n      return Math.min(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    },\n    max() {\n      return Math.max(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    },\n    avg() {\n      return Math.abs(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    }\n  }\n}\n</script>\n\n<!--\n<template>\n  <div class=\"flex-col\">\n    <div class=\"flex justify-center\">\n      <bounce-loader :loading=\"isLoading\" :color=\"'#68d391'\" :size=\"100\" />\n    </div>\n    <template v-if=\"!isLoading\">\n      <div class=\"flex flex-col sm:flex-row justify-around items-center\">\n        <div class=\"flex flex-col items-center\">\n          <img\n            :src=\"\n              `https://static.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\n            \"\n            :alt=\"asset.name\"\n            class=\"w-20 h-20 mr-5\"\n          />\n          <h1 class=\"text-5xl\">\n            {{ asset.name }}\n            <small class=\"sm:mr-2 text-gray-500\">{{ asset.symbol }}</small>\n          </h1>\n        </div>\n\n        <div class=\"my-10 flex flex-col\">\n          <ul>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Ranking</b>\n              <span>#{{ asset.rank }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio actual</b>\n              <span>{{ asset.priceUsd | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio m치s bajo</b>\n              <span>{{ min | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio m치s alto</b>\n              <span>{{ max | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio Promedio</b>\n              <span>{{ avg | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Variaci칩n 24hs</b>\n              <span>{{ asset.changePercent24Hr | percent }}</span>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"my-10 sm:mt-0 flex flex-col justify-center text-center\">\n          <button\n            class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n          >Cambiar</button>\n\n          <div class=\"flex flex-row my-5\">\n            <label class=\"w-full\" for=\"convertValue\">\n              <input\n                id=\"convertValue\"\n                type=\"number\"\n                class=\"text-center bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none leading-normal\"\n              />\n            </label>\n          </div>\n\n          <span class=\"text-xl\"></span>\n        </div>\n      </div>\n\n      <line-chart\n        class=\"my-10\"\n        :colors=\"['orange']\"\n        :min=\"min\"\n        :max=\"max\"\n        :data=\"history.map(h => [h.date, parseFloat(h.priceUsd).toFixed(2)])\"\n      />\n\n      <h3 class=\"text-xl my-10\">Mejores Ofertas de Cambio</h3>\n      <table>\n        <tr v-for=\"m in markets\" :key=\"`${m.exchangeId}-${m.priceUsd}`\" class=\"border-b\">\n          <td>\n            <b>{{ m.exchangeId }}</b>\n          </td>\n          <td>{{ m.priceUsd | dollar }}</td>\n          <td>{{ m.baseSymbol }} / {{ m.quoteSymbol }}</td>\n          <td>\n            <px-button\n              :is-loading=\"m.isLoading || false\"\n              v-if=\"!m.url\"\n              @custom-click=\"getWebSite(m)\"\n            >\n              <slot>Obtener Link</slot>\n            </px-button>\n\n            <a v-else class=\"hover:underline text-green-600\" target=\"_blanck\">{{ m.url }}</a>\n          </td>\n        </tr>\n      </table>\n    </template>\n  </div>\n</template>\n\n<script>\nimport api from '@/api'\nimport PxButton from '@/components/PxButton'\n\nexport default {\n  name: 'CoinDetail',\n\n  components: { PxButton },\n\n  data() {\n    return {\n      isLoading: false,\n      asset: {},\n      history: [],\n      markets: []\n    }\n  },\n\n  computed: {\n    min() {\n      return Math.min(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    },\n\n    max() {\n      return Math.max(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    },\n\n    avg() {\n      return Math.abs(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      )\n    }\n  },\n\n  created() {\n    this.getCoin()\n  },\n\n  methods: {\n    getWebSite(exchange) {\n      this.$set(exchange, 'isLoading', true)\n\n      return api\n        .getExchange(exchange.exchangeId)\n        .then(res => {\n          this.$set(exchange, 'url', res.exchangeUrl)\n        })\n        .finally(() => {\n          this.$set(exchange, 'isLoading', false)\n        })\n    },\n\n    getCoin() {\n      const id = this.$route.params.id\n      this.isLoading = true\n\n      Promise.all([\n        api.getAsset(id),\n        api.getAssetHistory(id),\n        api.getMarkets(id)\n      ])\n        .then(([asset, history, markets]) => {\n          this.asset = asset\n          this.history = history\n          this.markets = markets\n        })\n        .finally(() => (this.isLoading = false))\n    }\n  }\n}\n</script>\n\n<style scoped>\ntd {\n  padding: 10px;\n  text-align: center;\n}\n</style>\n\n-->\n"]}]}